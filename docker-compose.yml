# version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: insurance_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - insurance_network

  # Go Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: insurance_app
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8081:8081"
    environment:
      - GIN_MODE=release
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=example
      - DB_NAME=postgres
      # Admin account configuration
      - ADMIN_EMAIL=admin@insurance.com
      - ADMIN_PASSWORD=admin123
      - ADMIN_FIRST_NAME=System
      - ADMIN_LAST_NAME=Administrator
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - insurance_network
    volumes:
      - ./database:/app/database:ro

networks:
  insurance_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
